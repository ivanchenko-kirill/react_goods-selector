{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","reset","setState","addItem","item","removeItem","includes","lastIndex","lastIndexOf","splice","this","className","length","join","type","onClick","map","good","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuFaC,E,4MA/EbC,MAAe,CACbC,cAAe,I,EAGjBC,MAAQ,kBACN,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,QAAU,SAACC,GACT,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,OAAO,EAAKE,SAAS,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBI,O,EAG3DC,WAAa,SAACD,GACZ,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,GAAIA,EAAcM,SAASF,GAAO,CAChC,IAAMG,EAAYP,EAAcQ,YAAYJ,GAI5C,OAFAJ,EAAcS,OAAOF,EAAW,GAEzB,EAAKL,SAAS,CAAEF,cAAc,YAAKA,KAG5C,OAAO,M,4CAGT,WAAU,IAAD,OACCA,EAAkBU,KAAKX,MAAvBC,cAER,OACE,sBAAKW,UAAU,MAAf,UACGX,EAAcY,OAAS,EAEpB,qCACE,uDAAwBZ,EAAca,KAAK,SAC3C,wBACEF,UAAU,SACVG,KAAK,SACLC,QAASL,KAAKT,MAHhB,sBASF,mDACJ,oBAAIU,UAAU,OAAd,SACGd,EAAgBmB,KAAI,SAAAC,GAAI,OACvB,mCACE,qBAEEN,UAAWX,EAAcM,SAASW,GAAQ,kCAAoC,aAFhF,UAIE,6BAAKA,IACL,wBACEN,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAM,EAAKZ,QAAQc,IAH9B,iBAOA,wBACEN,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAM,EAAKV,WAAWY,IAC/BC,UAAWlB,EAAcM,SAASW,GAJpC,sBAXKA,iB,GApDHE,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a5084c0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[]\n}\n\nclass App extends React.Component {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  reset = () => (\n    this.setState({ selectedGoods: [] })\n  );\n\n  addItem = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    return this.setState({ selectedGoods: [...selectedGoods, item] });\n  };\n\n  removeItem = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(item)) {\n      const lastIndex = selectedGoods.lastIndexOf(item);\n\n      selectedGoods.splice(lastIndex, 1);\n\n      return this.setState({ selectedGoods: [...selectedGoods] });\n    }\n\n    return null;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedGoods.length > 0\n          ? (\n            <>\n              <h1>{`Selected goods: ${selectedGoods.join(', ')}`}</h1>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </>\n          )\n          : <h1>No goods selected</h1>}\n        <ul className=\"list\">\n          {goodsFromServer.map(good => (\n            <>\n              <li\n                key={good}\n                className={selectedGoods.includes(good) ? 'list__item list__item--selected' : 'list__item'}\n              >\n                <h3>{good}</h3>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => this.addItem(good)}\n                >\n                  Add\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => this.removeItem(good)}\n                  disabled={!selectedGoods.includes(good)}\n                >\n                  Remove\n                </button>\n              </li>\n            </>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}